<?xml version="1.0"?>
<ruleset
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="vendor/squizlabs/php_codesniffer/phpcs.xsd"
        name="composer-wrapper"
>
    <arg name="basepath" value="."/>
    <arg name="extensions" value="php"/>
    <arg name="parallel" value="8"/>
    <arg name="colors"/>

    <!-- Ignore warnings and show progress of the run -->
    <arg value="np"/>

    <file>./src</file>
    <file>./tests</file>

    <rule ref="PSR12">
        <exclude name="PSR1.Classes.ClassDeclaration.MissingNamespace"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Arrays">
    </rule>
    <rule ref="SlevomatCodingStandard.Classes">
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousErrorNaming"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming"/>

        <properties>
            <property name="linesCountAfterOpeningBrace" value="0" />
            <property name="linesCountBeforeClosingBrace" value="0" />
            <property name="linesCountBeforeFirstUse" value="0" />
            <property name="groups" type="array">
                <element value="uses"/>

                <element value="public constants"/>
                <element value="protected constants"/>
                <element value="private constants"/>

                <element value="public static properties"/>
                <element value="protected static properties"/>
                <element value="private static properties"/>

                <element value="public properties"/>
                <element value="protected properties"/>
                <element value="private properties"/>

                <element value="public static methods, public static abstract methods"/>
                <element value="protected static methods, protected static abstract methods"/>
                <element value="private static methods"/>

                <element value="static constructors"/>
                <element value="constructor"/>
                <element value="destructor"/>

                <element value="public methods, public abstract methods"/>
                <element value="protected methods, protected abstract methods"/>
                <element value="private methods"/>

                <element value="magic methods"/>
            </property>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting">
        <exclude name="SlevomatCodingStandard.Commenting.DisallowCommentAfterCode"/>
        <exclude name="SlevomatCodingStandard.Commenting.UselessFunctionDocComment"/>
        <exclude name="SlevomatCodingStandard.Commenting.RequireOneLineDocComment"/>
        <exclude name="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment"/>
        <properties>
            <property name="forbiddenAnnotations" type="array" value="
                @package,
                @author,
                @created,
                @version,
                @copyright,
                @license,
                @throws
            "/>
            <property name="forbiddenCommentPatterns" type="array" value="/Constructor/"/>
            <property name="forbiddenCommentPatterns" type="array" value="
                ~^Class \S+\z~i,
                ~^Interface \S+\z~i,
                ~^Trait \S+\z~i
            " />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.ControlStructures">
        <exclude name="SlevomatCodingStandard.ControlStructures.EarlyExit"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.RequireYodaComparison"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.DisallowEmpty"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.NewWithoutParentheses"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.DisallowShortTernaryOperator"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Exceptions">
        <exclude name="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Files">
        <properties>
            <property name="lineLengthLimit" value="250" />
        </properties>

        <exclude name="SlevomatCodingStandard.Files.TypeNameMatchesFileName"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions">
        <exclude name="SlevomatCodingStandard.Functions.UnusedParameter"/>
        <exclude name="SlevomatCodingStandard.Functions.DisallowArrowFunction"/>
        <exclude name="SlevomatCodingStandard.Functions.StrictCall"/>
        <exclude name="SlevomatCodingStandard.Functions.StaticClosure"/>
        <exclude name="SlevomatCodingStandard.Functions.RequireMultiLineCall"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces">
        <properties>
            <property name="allowFullyQualifiedNameForCollidingClasses" value="true"/>
            <property name="allowFullyQualifiedNameForCollidingFunctions" value="true"/>
            <property name="allowFullyQualifiedNameForCollidingConstants" value="true"/>
            <property name="searchAnnotations" value="true"/>
        </properties>

        <exclude name="SlevomatCodingStandard.Namespaces.UseOnlyWhitelistedNamespaces"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalConstants"/>
        <exclude name="SlevomatCodingStandard.Namespaces.UseSpacing"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Numbers">
        <exclude name="SlevomatCodingStandard.Numbers.RequireNumericLiteralSeparator"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Operators">
        <exclude name="SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators"/>
    </rule>
    <rule ref="SlevomatCodingStandard.PHP">
        <exclude name="SlevomatCodingStandard.PHP.UselessParentheses"/>
        <exclude name="SlevomatCodingStandard.PHP.DisallowReference"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints">
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.UselessAnnotation"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint"/>

        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.UselessAnnotation"/>
        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint"/>
        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint"/>

        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.UselessAnnotation"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint"/>

        <exclude name="SlevomatCodingStandard.TypeHints.DisallowMixedTypeHint"/>

        <properties>
            <property name="spacesCountAroundEqualsSign" value="0" />
            <property name="newlinesCountBetweenOpenTagAndDeclare" value="2" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Variables">
    </rule>
    <rule ref="SlevomatCodingStandard.Whitespaces">
        <properties>
            <property name="ignoreSpacesInAnnotation" value="true" />
        </properties>
    </rule>
</ruleset>
